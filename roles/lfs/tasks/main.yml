---
# tasks of role: lfs

- name: check if install package exists
  command: /usr/bin/test -d {{ lfs.root_dir }}/lfs-installer
  register: lfs_install_package_exists
  ignore_errors: yes
  changed_when: lfs_install_package_exists.rc != 0

- name: download install package
  get_url: url={{ lfs.install_package_url }}
           dest={{ lfs.root_dir }}/
  when: lfs_install_package_exists.rc != 0

- name: unpack lfs install package
  unarchive: src=~/{{ lfs.install_package }} dest={{ lfs.root_dir }}/ copy=no
  when: lfs_install_package_exists.rc != 0

- name: add wsgi to buildout.cfg
  lineinfile: dest={{ lfs.install_dir }}/buildout.cfg
              line='wsgi = true'

- name: install step 1 - bootstrap.py
  command: python bootstrap.py
           chdir={{ lfs.install_dir }}
           creates={{ lfs.install_dir }}/bin/buildout

- name: install step 2.1 - bin/buildout
  command: bin/buildout -v
           chdir={{ lfs.install_dir }}
           creates={{ lfs.install_dir }}/bin/django

- name: install step 2.2 - bin/buildout
  file: src={{ lfs.install_dir }}/bin/django.wsgi
        dest={{ lfs.project_dir }}/wsgi.py
        state=link

# TODO: uses hardcoded values - db and locale settings not available in this playbook ...
# TODO: configure also DEBUG, DEFAULT_FROM_EMAIL, ADMINS, SECRET_KEY etc.
# TODO: generate passwords see:
#       http://docs.ansible.com/playbooks_lookups.html#the-password-lookup
#       http://docs.ansible.com/faq.html#how-do-i-generate-crypted-passwords-for-the-user-module
#       http://stephen.rees-carter.net/thought/generating-passwords-in-ansible-with-complex-loops

- name: install step 3 - configuration
  template:
    src=settings.j2
    dest={{ lfs.project_dir }}/settings.py

# TODO: use django_manage ansible module instead but now it fails:
# - name: install step 4.1 - django loaddata
#   django_manage: command=loaddata app_path={{ lfs.project_dir }} fixtures=initial_data.json
#   File "manage.py", line 2, in <module>
#     from django.core.management import execute_manager
# ImportError: No module named django.core.management

# syncdb runs only when initial_data fixture changed
- name: install step 4.1 - django syncdb
  register: django_syncdb
  template:
    src=django_fixture_auth_user.json
    dest={{ lfs.install_dir }}/eggs/Django-1.6.5-py2.7.egg/django/contrib/auth/fixtures/initial_data.json

- name: install step 4.2 - django syncdb
  command: bin/django syncdb --noinput
           chdir={{ lfs.install_dir }}
  when: django_syncdb.changed == true

- name: install step 5 - django migrate
  command: bin/django migrate
           chdir={{ lfs.install_dir }}

# django lfs_init can be run only once
- name: install step 6.1 - django lfs_init
  command: bin/django lfs_init
           chdir={{ lfs.install_dir }}
           creates={{ lfs.install_dir }}/.django_lfs_init_run

- name: install step 6.2 - django lfs_init
  file: path={{ lfs.install_dir }}/.django_lfs_init_run state=touch
  changed_when: false

- name: install step 7 - django collectstatic
  command: bin/django collectstatic --noinput
           chdir={{ lfs.install_dir }}

- name: configure nginx step 1
  notify: restart nginx
  file:
    src=/etc/nginx/uwsgi_params
    dest={{ lfs.project_dir }}/uwsgi_params
    state=link

- name: configure nginx step 2
  sudo: yes
  notify: restart nginx
  template:
    src=lfs_nginx.j2
    dest=/etc/nginx/sites-available/lfs_nginx.conf

- name: configure nginx step 3
  sudo: yes
  notify: restart nginx
  file:
    src=/etc/nginx/sites-available/lfs_nginx.conf
    dest=/etc/nginx/sites-enabled/lfs_nginx.conf
    state=link

- name: configure uwsgi
  sudo: yes
  notify: restart uwsgi
  # register: uwsgi_config
  template: src=uwsgi.conf.j2 dest=/etc/init/uwsgi.conf

# TODO: uwsgi stats server: http://uwsgi-docs.readthedocs.org/en/latest/StatsServer.html
# TODO: uwsgitop: https://github.com/unbit/uwsgitop
